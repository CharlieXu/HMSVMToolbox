How to install the HM-SVM toolbox?
----------------------------------

1) Create mex files

  Run the mex compiler as follows:

  mex compute_score_matrix.cpp score_plif_struct.cpp
  mex best_path.cpp
  mex path_weights.cpp score_plif_struct.cpp
  and
  mex compute_loss_matrix.cpp

  (Note that Shogun is no longer required for this version 
  of the HM-SVM toolbox)

2) Adjust and compile solver interface

  If you want to use the CPLEX otimizer, compile its interface
  (see README file in opt_interface/cplex/).

  The interface for the Mosek optimizer does not need compilation,
  it should run right away once library and license paths have been 
  set properly ((see README file in opt_interface/mosek/).
  
  For more details see the README files in the opt_interface 
  subdirectories cplex and/or mosek.

3) Generate simulated toy data for 2-state HM-SVM model

  Execute the matlab script simulate_data.m in the models/two_state/
  subdirectory. It writes the data to ~/hmsvm_toydata/hmsvm_data.mat
  (directory is created if non-existent).

4) Train 2-state HM-SVM
  
  Call the matlab script setup_hmsvm_training.m which reads data from
  ~/hmsvm_toydata/hmsvm_data.mat and writes the trained HM-SVM (as
  well as intermediate results) to ~/hmsvm_toydata/segmentation/
  (directory is created if not existent).

  This script offers a range of configuration options for HM-SVM
  training thereby also facilitating cross-validation and model
  selection.



How to specify other state models?
----------------------------------

Create another subdirectory under models/ (like two_state/) and
re-implement all matlab functions present in the model/two-state/
subdirectory (except for simulate_data.m). Their function names have
to be specified in the model_config.m function. Adjust
setup_hmsvm_training.m (lines 30-35) accordingly. When writing code
for a new state model make_model.m is a good starting point.
